import { CurrencyMark, Route } from '../types/enums';
import AppState from './appState';
import { Dictionary, DictionaryKeys } from './dictionary';
import { SvgIcons, SvgMap } from './svgMap';
import { ICurrency } from '../types/interfaces';

export const ClassMap = {
  transitionButoon: 'transition-button',
  transitionLink: 'transition-link',
  alertMessage: {
    wrapper: 'alert-wrapper',
    error: 'alert-wrapper_error',
    success: 'alert-wrapper_success',
  },
  authorization: {
    section: 'authorization',
    wrapper: 'authorization__wrapper',
    imgContainer: 'authorization__greeting-images',
    title: 'authorization__header',
    greeting: 'authorization__greeting',
    slider: 'authorization__slider',
    slide: 'authorization__slider__slide',
    form: 'authorization__form',
    formItem: 'authorization__form__input',
    inputEmail: 'authorization__form__email',
    inputPassword: 'authorization__form__password',
    registration: 'authorization__form__registration',
    registrationText: 'authorization__form__registration__text',
    registrationLink: 'authorization__form__registration__link',
    signInButton: 'authorization__form_submit',
    main: 'main__authorization',
  },
  registration: {
    wrapper: 'registration-wrapper',
    form: 'registration-form',
    formTitle: 'registration-form__title',
    formItem: 'registration-form__input',
    inputEmail: 'registration-form__email',
    inputName: 'registration-form__name',
    inputPassword: 'registration__form__password',
    selectCurrency: 'registration-form__currency',
    inputConfirmPassword: 'registration__form__confirm-password',
    submit: 'registration-form_submit',
  },
  support: {
    wrapper: 'support-wrapper',
    form: 'support-form',
    formTitle: 'support-form__title',
    formItem: 'support-form__input',
    inputMessage: 'support-form__message',
    submit: 'support-form_submit',
  },
  mode: {
    dark: {
      background: 'dark-mode-background',
      backgroundSection: 'dark-mode-menu-background',
      title: 'dark-mode-title',
      font: 'dark-mode-font',
      modal: 'dark-mode-modal-background',
      modalTitle: 'dark-mode-modal-title',
      modalFont: 'dark-mode-modal-font',
      icon: 'dark-mode-icon',
      logo: 'dark-mode-logo',
    },
    light: {
      background: 'light-mode-background',
      backgroundSection: 'light-mode-menu-background',
      title: 'light-mode-title',
      font: 'light-mode-font',
      modal: 'light-mode-modal-background',
      modalTitle: 'light-mode-modal-title',
      modalFont: 'light-mode-modal-font',
      icon: 'light-mode-icon',
      logo: 'light-mode-logo',
    },
  },
  passwordIcon: 'password-icon',
  showPassword: 'show-password',
  closeModalButton: 'close-modal',
  closeLine: 'close-modal__line',
  errorValidation: 'error-validation-message',
  show: 'show',
  hide: 'hide',
  parentInput: 'form__item',
  wrapperPassword: 'wrapper-password',
  footer: {
    footer: 'footer',
    footerLogo: 'footer__logo',
    footerCopyright: 'footer__copyright',
    footerGithubWrap: 'footer__github-wrap',
    footerGithub: 'footer__github',
    footerGithubLogo: 'footer__github-logo',
  },
  menu: {
    navWrap: 'menu__nav-wrap',
    menuSection: 'main__menu',
    logo: 'menu__logo',
    logoTitle: 'menu__logo-title',
    logoWrap: 'menu__logo-wrap',
    navList: 'menu__nav',
    navItem: 'menu__nav-item',
    navIcon: 'menu__nav-icon',
    navButton: 'menu__nav-button',
    navButtonActive: 'menu__nav-button_active',
    menuItem: 'menu__item',
    menuList: 'menu__list',
    userImg: 'user__img',
    userWrap: 'user__wrap',
    user: 'user',
    switchInput: 'menu__input',
    switchSpan: 'menu__button-span',
    switchLabel: 'menu__switch',
    switchWrap: 'switch-wrap',
    logout: 'menu_logout',
  },
  main: 'main',
  mainContent: 'main__content',
  langSwitcher: {
    button: 'lang-switcher',
    container: 'lang-switcher__container',
    item: 'lang-switcher__container__item',
    big: 'big-switcher',
    small: 'small-switcher',
    show: 'switcher-show',
  },
  dashboard: {
    mainDashboardWrap: 'main__dashboard-wrap',
    mainDashboard: 'main__dashboard',
    mainAside: 'main__aside',
    dashboard: 'dashboard',
    header: 'dashboard__header',
    iconWrap: 'icon-wrap',
    iconWrapLight: 'icon-wrap_light',
    totalPrice: 'dashboard__total-price',
    title: 'dashboard__title',
    totalBalance: 'balance__value',
    totalBalanceTitle: 'balance__title',
    balanceWrap: 'balance__wrap',
    balance: 'balance',
    expenseTotal: 'dashboard__expense-total',
    incomeTotal: 'dashboard__income-total',
    totalWrap: 'total-wrap',
    balanceButton: 'balance__button',
    incomeForm: 'form',
    formWrapper: 'form__wrapper',
    formTitle: 'form__title',
    formItem: 'form__item',
    formSelect: 'form__select',
    formInput: 'form__input',
    formLabel: 'form__label',
    formSubmitButton: 'form__button',
    formTextarea: 'form__textarea',
    calculatorWrap: 'calculator-wrap',
    expenseSection: 'expense-wrap',
    expenseTitle: 'expense__title',
    expenseTitleWrap: 'expense__title-wrap',
    expenseList: 'expense__list',
    expenseHeaderItem: 'expense__list_header',
    incomeHeaderItem: 'income__list_header',
    expenseItem: 'expense__item',
    incomeItem: 'income__item',
    expensePaginationWrap: 'expense__pagination',
    paginationButton: 'expense__pagination_button',
    paginationButtonLeft: 'pagination__button_left',
    paginationButtonRight: 'pagination__button_right',
    paginationPageNum: 'expense__pagination__page-num',
    paginationInput: 'expense__pagination_input',
    emptyExpenseList: 'expense',
    editButtonsWrap: 'expense__button-wrap',
    editButton: 'expense__button_edit',
    deleteButton: 'expense__button_delete',
  },
  wallet: {
    categoriesSection: 'categories',
    accountsSection: 'accounts',
    wrapper: 'wallet-wrapper',
    section: 'wallet',
    subTitle: 'wallet__subtitle',
    subTitleItem: 'wallet__subtitle__item',
    sum: 'wallet__sum',
    itemContainer: 'wallet__container',
    item: 'wallet__item',
    title: 'wallet__title',
    image: 'wallet__image',
    balance: 'wallet__balance',
    lightIcon: 'wallet__image_light',
    select: 'wallet__select',
    chart: 'wallet__chart',
    main: 'wallet-page',
    plus: 'wallet__plus-item',
    alert: 'wallet__alert',
    alertContainer: 'wallet__alert-container',
  },
  customSelect: {
    container: 'customselect',
    title: 'customselect__title',
    arrow: 'customselect__arrow',
    arrowLeft: 'customselect__arrow_left',
    arrowRight: 'customselect__arrow_right',
  },
  creater: {
    createWrapper: 'create-wrapper',
    createForm: 'create-form',
    createTitle: 'create-form__title',
    createItem: 'create-form__item',
    createInputContainer: 'create-form__input-container',
    createName: 'create-form__name',
    createIcon: 'create-form__icon',
    createBalance: 'create-form__balance',
    createCurrency: 'create-form__currency',
    createSubmit: 'create-form__submit',
    createLimit: 'create-form__limit',
    createCheckbox: 'create-form__limit_checkbox',
  },
  updater: {
    deleteButton: 'updater-delete-button',
    createButton: 'updater-create-button',
  },
  iconsBlock: {
    wrapper: 'icons-wrapper',
    container: 'icons__container',
    item: 'icons__item',
  },
  calendar: {
    input: 'calendar__input',
    body: 'calendar__body',
    buttons: 'calendar__button-wrap',
    button: 'calendar__button',
  },
  analytic: {
    main: 'analytic',
    calendar: 'analytic__calendar',
    title: 'analytic__title',
    chartYearExpenses: {
      container: 'analytic__chart-daily-expenses',
    },
    chartMonthlyExpIncom: {
      container: 'analytic__chart-monthly-expenses-incomes',
    },
    chartCategoriesColumns: {
      container: 'analytic__chart-categories-columns',
    },
  },
  preloader: 'load',
  errorPage: {
    main: 'error-page',
    img: 'error-page__image',
    button: 'error-page__button',
  },
  accountSettings: {
    accountSettings: 'account-settings',
    fieldset: 'account-settings__wrapper',
    infoTitle: 'account-settings__title',
    formItem: 'account-settings__item',
    inputName: 'account-settings__input',
    inputPhone: 'account-settings__input_phone',
    update: 'account-settings__update-btn',
    userImg: 'account-settings__avatar',
  },
  currencyList: {
    currency: 'currency',
    currencyList: 'currency__list',
    currencyItem: 'currency__item',
    currencyIcon: 'currency__icon',
    currencyTitle: 'currency__title',
  },
  adaptiveMenu: {
    section: 'adaptive-menu',
    container: 'adaptive-menu__container',
    navWrap: 'menu__nav-wrap',
    menuSection: 'main__menu',
    menuNav: 'adaptive-menu__menu',
    logo: 'menu__logo',
    logoTitle: 'menu__logo-title',
    logoWrap: 'menu__logo-wrap',
    navList: 'menu__nav',
    navItem: 'menu__nav-item',
    navIcon: 'menu__nav-icon',
    navButton: 'menu__nav-button',
    navButtonActive: 'menu__nav-button_active',
    menuItem: 'menu__item',
    menuList: 'menu__list',
    userImg: 'user__img',
    userWrap: 'user__wrap',
    user: 'user',
    switchInput: 'menu__input',
    switchSpan: 'menu__button-span',
    switchLabel: 'menu__switch',
    switchWrap: 'switch-wrap',
    logout: 'menu_logout',
    menuOpen: 'menu-open',
  },
};

export const Title = {
  copyright: 'All Rights Reserved Â© Yoda`s team 2023',
  logo: 'MAPmoney',
};

export const PageLink = {
  rsSchool: 'https://rs.school/js/',
  firstGithub: 'https://github.com/BondPV',
  secondGithub: 'https://github.com/marinastepanchuk',
  thirdGithub: 'https://github.com/Alesia-V175',
};

export const Attribute = {
  target: 'target',
  targetValue: '_blank',
  rel: 'rel',
  relValue: 'noopener',
  dataLink: 'data-link',
  checked: 'checked',
  inputCheckbox: 'checkbox',
  key: 'key',
  dataLang: 'data-lang',
  disabled: 'disabled',
  for: 'for',
};

export const MenuNavItem = {
  dashboard: {
    path: Route.DASHBOARD,
    name: Dictionary[AppState.lang].dashboard,
    key: DictionaryKeys.dashboard,
    image: SvgMap.dashboard,
  },
  wallet: {
    path: Route.WALLET,
    name: Dictionary[AppState.lang].wallet,
    key: DictionaryKeys.wallet,
    image: SvgMap.wallet,
  },
  analytics: {
    path: Route.ANALYTICS,
    name: Dictionary[AppState.lang].analytics,
    key: DictionaryKeys.analytics,
    image: SvgMap.analytic,
  },
  account: {
    path: Route.ACCOUNT,
    name: Dictionary[AppState.lang].account,
    key: DictionaryKeys.account,
    image: SvgMap.account,
  },
};

export const startId = {
  accounts: 'account-',
  categories: 'category-',
  svg: 'svg-',
};

export const IdMap = {
  accountSelect: 'accountSelect',
  categorySelect: 'categorySelect',
  dateValue: 'dateValue',
  sumInput: 'sumInput',
  comment: 'comment',
  walletSelect: 'wallet-select',
  limitCheckbox: 'wallet-limit-checkbox',
  chartDailyExpenses: 'chart-daily-expenses',
  chartMonthlyExpIncom: 'chart-monthly-expenses-incomes',
  chartCategoriesColumns: 'chart-categories-columns',
  chartCategoriesPie: 'chart-categories-pie',
  menuUserName: 'menuUserName',
  menuUserImg: 'menuUserImg',
  expenseList: 'expenseList',
  incomeList: 'incomeList',
  accountBalance: 'accountBalance',
};

export const TextArea = {
  minLength: 3,
  maxLength: 100,
  rows: 3,
};

export const InputValue = {
  minNum: '1',
  maxNum: '10000000',
  limitPage: 10,
  maxLimitPage: '20',
};

export const MinDate = '2012-01-01';

export const InputType = {
  number: 'number',
  date: 'date',
  text: 'text',
};

export const ExpenseColumn = ['dateExpense', 'categoryExpense', 'amountExpense', 'accountExpense', 'commentExpense'];
export const IncomeColumn = ['dateExpense', 'accountExpense', 'amountExpense', 'commentExpense'];

export const chartColor = {
  text: '#5063BF',
  dark: '#5063BF',
  light: '#64CFF6',
  startGradient: '#6876bb',
  endGradient: 'rgba(231, 235, 255, 0)',
  columnIncomes: '#E7EBFF',
};

export const currencyListArray: ICurrency[] = [
  {
    icon: SvgIcons.flags.usd,
    key: 'USD',
    amount: 0,
    currency: CurrencyMark.USD,
  },
  {
    icon: SvgIcons.flags.euro,
    key: 'EUR',
    amount: 0,
    currency: CurrencyMark.EUR,
  },
  {
    icon: SvgIcons.flags.byn,
    key: 'BYN',
    amount: 0,
    currency: CurrencyMark.BYN,
  },
  {
    icon: SvgIcons.flags.rub,
    key: 'RUB',
    amount: 0,
    currency: CurrencyMark.RUB,
  },
  {
    icon: SvgIcons.flags.lari,
    key: 'GEL',
    amount: 0,
    currency: CurrencyMark.GEL,
  },
  {
    icon: SvgIcons.flags.franc,
    key: 'CHF',
    amount: 0,
    currency: CurrencyMark.CHF,
  },
  {
    icon: SvgIcons.flags.yuan,
    key: 'CNY',
    amount: 0,
    currency: CurrencyMark.CNY,
  },
];
